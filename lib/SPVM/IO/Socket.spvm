class IO::Socket extends IO::Handle {
  interface IO::Socket::Interface;

  has fd : int;
  
  method has_interfaces : int () { return 1; }
  
  native static method new : IO::Socket ($host : string, $port : int);
  native method read : int ($buffer : byte[]);
  native method write : int ($buffer : string, $length : int);
  native method close : int ();
  method fileno : int () { return $self->{fd}; }
  
  method opened : int () {
    my $fd = $self->{fd};
    
    my $opened = 0;
    if ($fd >= 0) {
      $opened = 1;
    }
    
    return $opened;
  }
  
  method DESTROY : void () {
    $self->close;
  }
}
